{"version":3,"file":"static/js/415.af447122.chunk.js","mappings":"0OAsCA,UAjCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,MAFH,OAEVC,EAFU,OAGhBC,QAAQC,IAAIF,EAAKG,SACjBP,EAAUI,EAAKG,SAJC,gDAMhBC,IAAAA,OAAAA,QAAwB,yBANR,yDAAH,qDASjBN,GACD,GAAE,KAGD,4BACE,0CACA,wBACGH,EAAOU,KAAI,SAAAC,GAEV,OACE,UAAC,KAAD,CAAqBC,GAAE,iBAAYD,EAAME,IAAzC,WACE,uBAAIF,EAAMG,OAASH,EAAMI,OAAU,MAD1BJ,EAAME,GAIpB,QAIR,C,gLClCKG,EAAW,+BACXC,EAAM,mCASCb,EAAiB,mCAAG,oGACNc,MAAM,GAAD,OAAIF,EAAJ,qCAAyCC,IADxC,WACvBE,EADuB,QAEfC,GAFe,uBAGzBX,IAAAA,OAAAA,QAAwB,yBAHC,kBAKlBY,QAAQC,OAAO,IAAIC,MAAM,iBALP,gCAOtBJ,EAASK,QAPa,2CAAH,qDAUjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHR,MAAM,GAAD,OAAIF,EAAJ,+BAAmCU,EAAnC,oBAA0DT,IAD5D,WACpBE,EADoB,QAEZC,GAFY,uBAGtBX,IAAAA,OAAAA,QAAwB,yBAHF,kBAIfY,QAAQC,OAAO,IAAIC,MAAM,iBAJV,gCAMnBJ,EAASK,QANU,2CAAH,sDAUdG,EAAY,mCAAG,WAAOC,GAAP,uFACDV,MAAM,GAAD,OAAIF,EAAJ,kBAAsBY,EAAtB,oBAAyCX,IAD7C,WAClBE,EADkB,QAEVC,GAFU,uBAGpBX,IAAAA,OAAAA,QAAwB,yBAHJ,kBAIbY,QAAQC,OAAO,IAAIC,MAAM,iBAJZ,gCAMjBJ,EAASK,QANQ,2CAAH,sDASZK,EAAY,mCAAG,WAAOD,GAAP,uFACDV,MAAM,GAAD,OAAIF,EAAJ,kBAAsBY,EAAtB,4BAAiDX,IADrD,WAClBE,EADkB,QAEVC,GAFU,uBAGpBX,IAAAA,OAAAA,QAAwB,yBAHJ,kBAIbY,QAAQC,OAAO,IAAIC,MAAM,iBAJZ,gCAMjBJ,EAASK,QANQ,2CAAH,qD","sources":["pages/Home.jsx","services/api.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { getTrandingMovies } from '../services/api';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await getTrandingMovies();\n        console.log(data.results);\n        setMovies(data.results);\n      } catch (error) {\n        Notiflix.Notify.failure('Service not available');\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending now</h2>\n      <ul>\n        {movies.map(movie => {\n          // console.log(movie);\n          return (\n            <Link key={movie.id} to={`movies/${movie.id}`}>\n              <p>{movie.title || movie.name}</p>{' '}\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import Notiflix from 'notiflix';\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst KEY = '7dc61a6c44fade8b575440491a92ae90';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=7dc61a6c44fade8b575440491a92ae90\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=7dc61a6c44fade8b575440491a92ae90\n// https://api.themoviedb.org/3/search/movie?api_key=7dc61a6c44fade8b575440491a92ae90\n\n// details: https://api.themoviedb.org/3/movie/{movie_id}?api_key=7dc61a6c44fade8b575440491a92ae90\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=7dc61a6c44fade8b575440491a92ae90\n\nexport const getTrandingMovies = async () => {\n    const response = await fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n};\n\nexport const getMovieByName = async (searchQuery) => {\n    const response = await fetch(`${BASE_URL}/search/movie?query=${searchQuery}&api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n\n};\n\nexport const getMovieById = async (movieId) => {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n};\n\nexport const getCastMovie = async (movieId) => {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n}\n\n\n// https://api.themoviedb.org/3/movie/976573/credits?api_key=7dc61a6c44fade8b575440491a92ae90&profile_path=/liV9OXUeo7T19hhjFlqTELtETnW.jpg\n// http://image.tmdb.org/t/p/w300/liV9OXUeo7T19hhjFlqTELtETnW.jpg"],"names":["useState","movies","setMovies","useEffect","fetchMovies","getTrandingMovies","data","console","log","results","Notiflix","map","movie","to","id","title","name","BASE_URL","KEY","fetch","response","ok","Promise","reject","Error","json","getMovieByName","searchQuery","getMovieById","movieId","getCastMovie"],"sourceRoot":""}