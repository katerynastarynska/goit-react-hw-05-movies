{"version":3,"file":"static/js/726.ad247a20.chunk.js","mappings":"iRA6DA,EArDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,QAAQC,IAAIH,GAEZ,OAAkCI,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAEA,IAAMU,EAAc,mCAAG,WAAMV,GAAN,iGAEAW,EAAAA,EAAAA,IAAaX,GAFb,UAEbY,EAFa,8BAKjBN,EAAa,IACbO,IAAAA,OAAAA,QAAwB,kBANP,0BASnBP,EAAaM,EAAKE,MAClBN,EAAS,MAVU,kDAYnBA,EAAS,EAAD,IAZW,0DAAH,sDAepBE,EAAeV,EAjBK,CAkBrB,GAAE,CAACA,EAASO,IAKb,OACE,0BACE,wBACGF,GACCA,EAAUU,KAAI,SAAAC,GAAI,OAChB,2BACE,gBACEC,IAAKD,EAAKE,aAAL,UAVF,8BAUE,OATA,QASA,OAC4BF,EAAKE,c,6dAGtCC,IAAI,MAEN,wBAAKH,EAAKI,QACV,uCAAeJ,EAAKK,eATbL,EAAKM,GADE,OAgB3B,C,gLCzDKC,EAAW,+BACXC,EAAM,mCASCC,EAAiB,mCAAG,oGACNC,MAAM,GAAD,OAAIH,EAAJ,qCAAyCC,IADxC,WACvBG,EADuB,QAEfC,GAFe,uBAGzBf,IAAAA,OAAAA,QAAwB,yBAHC,kBAKlBgB,QAAQC,OAAO,IAAIC,MAAM,iBALP,gCAOtBJ,EAASK,QAPa,2CAAH,qDAUjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHR,MAAM,GAAD,OAAIH,EAAJ,+BAAmCW,EAAnC,oBAA0DV,IAD5D,WACpBG,EADoB,QAEZC,GAFY,uBAGtBf,IAAAA,OAAAA,QAAwB,yBAHF,kBAIfgB,QAAQC,OAAO,IAAIC,MAAM,iBAJV,gCAMnBJ,EAASK,QANU,2CAAH,sDAUdG,EAAY,mCAAG,WAAOnC,GAAP,uFACD0B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBvB,EAAtB,oBAAyCwB,IAD7C,WAClBG,EADkB,QAEVC,GAFU,uBAGpBf,IAAAA,OAAAA,QAAwB,yBAHJ,kBAIbgB,QAAQC,OAAO,IAAIC,MAAM,iBAJZ,gCAMjBJ,EAASK,QANQ,2CAAH,sDASZrB,EAAY,mCAAG,WAAOX,GAAP,uFACD0B,MAAM,GAAD,OAAIH,EAAJ,kBAAsBvB,EAAtB,4BAAiDwB,IADrD,WAClBG,EADkB,QAEVC,GAFU,uBAGpBf,IAAAA,OAAAA,QAAwB,yBAHJ,kBAIbgB,QAAQC,OAAO,IAAIC,MAAM,iBAJZ,gCAMjBJ,EAASK,QANQ,2CAAH,qD","sources":["components/Cast.jsx","services/api.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCastMovie } from 'services/api';\nimport imgDefault from '../assets/default-image.png';\n// \nconst Cast = () => {\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchCastMovie = async movieId => {\n      try {\n        const data = await getCastMovie(movieId);\n  \n        if (!data) {\n          setMovieCast([]);\n          Notiflix.Notify.failure('No information');\n          return;\n        }\n        setMovieCast(data.cast);\n        setError(null);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchCastMovie(movieId);\n  }, [movieId, error]);\n\n  const base_url = 'http://image.tmdb.org/t/p/';\n  const image_size = 'w92/';\n\n  return (\n    <div>\n      <ul>\n        {movieCast &&\n          movieCast.map(item => (\n            <li key={item.id}>\n              <img\n                src={item.profile_path\n                    ? `${base_url}${image_size}${item.profile_path}`\n                    : imgDefault\n                }\n                alt=\"\"\n              />\n              <h5>{item.name}</h5>\n              <p>Character: {item.character}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import Notiflix from 'notiflix';\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst KEY = '7dc61a6c44fade8b575440491a92ae90';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=7dc61a6c44fade8b575440491a92ae90\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=7dc61a6c44fade8b575440491a92ae90\n// https://api.themoviedb.org/3/search/movie?api_key=7dc61a6c44fade8b575440491a92ae90\n\n// details: https://api.themoviedb.org/3/movie/{movie_id}?api_key=7dc61a6c44fade8b575440491a92ae90\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=7dc61a6c44fade8b575440491a92ae90\n\nexport const getTrandingMovies = async () => {\n    const response = await fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n};\n\nexport const getMovieByName = async (searchQuery) => {\n    const response = await fetch(`${BASE_URL}/search/movie?query=${searchQuery}&api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n\n};\n\nexport const getMovieById = async (movieId) => {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n};\n\nexport const getCastMovie = async (movieId) => {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n}\n\n\n// https://api.themoviedb.org/3/movie/976573/credits?api_key=7dc61a6c44fade8b575440491a92ae90&profile_path=/liV9OXUeo7T19hhjFlqTELtETnW.jpg\n// http://image.tmdb.org/t/p/w300/liV9OXUeo7T19hhjFlqTELtETnW.jpg"],"names":["movieId","useParams","console","log","useState","movieCast","setMovieCast","error","setError","useEffect","fetchCastMovie","getCastMovie","data","Notiflix","cast","map","item","src","profile_path","alt","name","character","id","BASE_URL","KEY","getTrandingMovies","fetch","response","ok","Promise","reject","Error","json","getMovieByName","searchQuery","getMovieById"],"sourceRoot":""}