{"version":3,"file":"static/js/936.29f4f512.chunk.js","mappings":"uQACA,EAA4B,wBAA5B,EAAyE,iCAAzE,EAA+H,iCAA/H,EAAqL,iCAArL,EAAoP,0C,kBCwDpP,EAjDa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,MAFH,OAEVC,EAFU,OAGhBC,QAAQC,IAAIF,EAAKG,SACjBP,EAAUI,EAAKG,SAJC,gDAMhBC,IAAAA,OAAAA,QAAwB,yBANR,yDAAH,qDASjBN,GACD,GAAE,IAKH,OACE,4BACE,eAAIO,UAAWC,EAAf,SAA8B,kBAC9B,eAAID,UAAWC,EAAf,SACGX,EAAOY,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACpC,OACE,UAAC,KAAD,CACEN,UAAWC,EAEXM,GAAE,iBAAYJ,GAHhB,WAKE,gBACEK,IACEJ,EAAW,UAhBV,8BAgBU,OAfR,SAeQ,OACoBA,GAC3BK,EAENC,IAAKJ,KAEP,gBAAKN,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,SAAuCK,GAASD,QAZ7CF,EAgBV,QAIR,C,wMCrDKQ,EAAW,+BACXC,EAAM,mCAEClB,EAAiB,mCAAG,oGACNmB,MAAM,GAAD,OAAIF,EAAJ,qCAAyCC,IADxC,WACvBE,EADuB,QAEfC,GAFe,uBAGzBhB,IAAAA,OAAAA,QAAwB,yBAHC,kBAKlBiB,QAAQC,OAAO,IAAIC,MAAM,iBALP,gCAOtBJ,EAASK,QAPa,2CAAH,qDAUjBC,EAAc,mCAAG,WAAOC,GAAP,uFACHR,MAAM,GAAD,OAAIF,EAAJ,+BAAmCU,EAAnC,oBAA0DT,IAD5D,WACpBE,EADoB,QAEZC,GAFY,uBAGtBhB,IAAAA,OAAAA,QAAwB,yBAHF,kBAIfiB,QAAQC,OAAO,IAAIC,MAAM,iBAJV,gCAMnBJ,EAASK,QANU,2CAAH,sDAUdG,EAAY,mCAAG,WAAOC,GAAP,uFACDV,MAAM,GAAD,OAAIF,EAAJ,kBAAsBY,EAAtB,oBAAyCX,IAD7C,WAClBE,EADkB,QAEVC,GAFU,uBAGpBhB,IAAAA,OAAAA,QAAwB,yBAHJ,kBAIbiB,QAAQC,OAAO,IAAIC,MAAM,iBAJZ,gCAMjBJ,EAASK,QANQ,2CAAH,sDASZK,EAAY,mCAAG,WAAOD,GAAP,uFACDV,MAAM,GAAD,OAAIF,EAAJ,kBAAsBY,EAAtB,4BAAiDX,IADrD,WAClBE,EADkB,QAEVC,GAFU,uBAGpBhB,IAAAA,OAAAA,QAAwB,yBAHJ,kBAIbiB,QAAQC,OAAO,IAAIC,MAAM,iBAJZ,gCAMjBJ,EAASK,QANQ,2CAAH,sDASZM,EAAe,mCAAG,WAAOF,GAAP,uFACJV,MAAM,GAAD,OAAIF,EAAJ,kBAAsBY,EAAtB,4BAAiDX,IADlD,WACrBE,EADqB,QAEbC,GAFa,uBAGvBhB,IAAAA,OAAAA,QAAwB,yBAHD,kBAIhBiB,QAAQC,OAAO,IAAIC,MAAM,iBAJT,gCAMpBJ,EAASK,QANW,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainTitle\":\"Home_mainTitle__EDE7U\",\"trendingMoviesList\":\"Home_trendingMoviesList__gCyaT\",\"trendingMoviesItem\":\"Home_trendingMoviesItem__sXVS3\",\"trendingMoviesName\":\"Home_trendingMoviesName__AFYYm\",\"trendingMoviesNameContainer\":\"Home_trendingMoviesNameContainer__w94LY\"};","import Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { getTrandingMovies } from '../../services/api';\nimport { Link } from 'react-router-dom';\n\nimport css from './Home.module.css';\nimport imgDefault from '../../assets/default-image154w.png';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const data = await getTrandingMovies();\n        console.log(data.results);\n        setMovies(data.results);\n      } catch (error) {\n        Notiflix.Notify.failure('Service not available');\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  const base_url = 'http://image.tmdb.org/t/p/';\n  const image_size = 'w154/';\n\n  return (\n    <div>\n      <h2 className={css.mainTitle}>Trending now</h2>\n      <ul className={css.trendingMoviesList}>\n        {movies.map(({ id, poster_path, name, title }) => {\n          return (\n            <Link\n              className={css.trendingMoviesItem}\n              key={id}\n              to={`movies/${id}`}\n            >\n              <img\n                src={\n                  poster_path\n                    ? `${base_url}${image_size}${poster_path}`\n                    : imgDefault\n                }\n                alt={title}\n              />\n              <div className={css.trendingMoviesNameContainer}>\n                <p className={css.trendingMoviesName}>{title || name}</p>\n              </div>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import Notiflix from 'notiflix';\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst KEY = '7dc61a6c44fade8b575440491a92ae90';\n\nexport const getTrandingMovies = async () => {\n    const response = await fetch(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n};\n\nexport const getMovieByName = async (searchQuery) => {\n    const response = await fetch(`${BASE_URL}/search/movie?query=${searchQuery}&api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n\n};\n\nexport const getMovieById = async (movieId) => {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n};\n\nexport const getMovieCast = async (movieId) => {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n}\n\nexport const getMovieReviews = async (movieId) => {\n    const response = await fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n    if (!response.ok) {\n        Notiflix.Notify.failure('Service not available');\n        return Promise.reject(new Error(\"Bad request\"));\n    }\n    return response.json();\n}\n"],"names":["useState","movies","setMovies","useEffect","fetchMovies","getTrandingMovies","data","console","log","results","Notiflix","className","css","map","id","poster_path","name","title","to","src","imgDefault","alt","BASE_URL","KEY","fetch","response","ok","Promise","reject","Error","json","getMovieByName","searchQuery","getMovieById","movieId","getMovieCast","getMovieReviews"],"sourceRoot":""}